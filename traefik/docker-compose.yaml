version: "3.3"

services:

    traefik:
        image: "traefik:v2.8"
        container_name: "traefik"
        restart: unless-stopped
        command:
            #- "--log.level=DEBUG"
            - "--api.dashboard=true"
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.web.address=:80"
            - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
            - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
            - "--entrypoints.websecure.address=:443"
            - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
            - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
            #- "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
            - "--certificatesresolvers.letsencrypt.acme.email=netcup@maxbachmann.de"
            - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
            - "--providers.file.filename=/configs/proxmox-router.yaml"
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - "./letsencrypt:/letsencrypt"
            - "./configs:/configs"
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
        labels:
            traefik.enable: true
            traefik.http.routers.traefik.rule: Host(`traefik.maxbachmann.de`)
            traefik.http.routers.traefik.entrypoints: websecure
            traefik.http.routers.traefik.tls.certresolver: letsencrypt
            #traefik.http.routers.traefik.rule: Host(`traefik.maxbachmann.de`)
            traefik.http.routers.traefik.service: api@internal
            traefik.http.routers.traefik.middlewares: internal-network
            # private network ip whitelist
            traefik.http.middlewares.internal-network.ipwhitelist.sourcerange: "192.168.178.0/24, 10.6.0.0/24"
        networks:
            - pihole_frontend
            - paperless_frontend
            - nextcloud_frontend
            - psql-test_frontend
            - mealie_frontend

networks:
    nextcloud_frontend:
        name: nextcloud_frontend
    pihole_frontend:
        name: pihole_frontend
    paperless_frontend:
        name: paperless_frontend
    psql-test_frontend:
        name: psql-test_frontend
    mealie_frontend:
        name: mealie_frontend
